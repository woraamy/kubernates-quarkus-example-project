apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fastapi-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
        - name: fastapi
#          env:
#            - name: PERSON_SERVICE_URL
#              value: http://quarkus:8080
          envFrom:
            - configMapRef:
                name: fa-env
          image: super-duper-waffle-fastapi
          ports:
            - containerPort: 5000
              name: http
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /test
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: fastapi-pvc

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fa-env
data:
  PERSON_SERVICE_URL: "http://quarkus:8080"
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi
  labels:
    app: fastapi
spec:
  selector:
    app: fastapi
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastapi-ingress
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  rules:
    - host: "fa.127.0.0.1.nip.io"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: fastapi
                port:
                  number: 80
