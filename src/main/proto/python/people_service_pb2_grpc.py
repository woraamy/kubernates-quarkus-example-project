# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.main.proto import people_service_pb2 as src_dot_main_dot_proto_dot_people__service__pb2


class PeopleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPersons = channel.unary_unary(
                '/person.PeopleService/ListPersons',
                request_serializer=src_dot_main_dot_proto_dot_people__service__pb2.Empty.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonList.FromString,
                )
        self.GetPerson = channel.unary_unary(
                '/person.PeopleService/GetPerson',
                request_serializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonIdRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonResponse.FromString,
                )
        self.CreatePerson = channel.unary_unary(
                '/person.PeopleService/CreatePerson',
                request_serializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonIdResponse.FromString,
                )
        self.UpdatePerson = channel.unary_unary(
                '/person.PeopleService/UpdatePerson',
                request_serializer=src_dot_main_dot_proto_dot_people__service__pb2.UpdatePersonRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.Empty.FromString,
                )
        self.DeletePerson = channel.unary_unary(
                '/person.PeopleService/DeletePerson',
                request_serializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonIdRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.Empty.FromString,
                )
        self.SearchPerson = channel.unary_unary(
                '/person.PeopleService/SearchPerson',
                request_serializer=src_dot_main_dot_proto_dot_people__service__pb2.SearchRequest.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonResponse.FromString,
                )
        self.CountPersons = channel.unary_unary(
                '/person.PeopleService/CountPersons',
                request_serializer=src_dot_main_dot_proto_dot_people__service__pb2.Empty.SerializeToString,
                response_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.CountResponse.FromString,
                )


class PeopleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListPersons(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchPerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CountPersons(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PeopleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPersons': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPersons,
                    request_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.Empty.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonList.SerializeToString,
            ),
            'GetPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPerson,
                    request_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonIdRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonResponse.SerializeToString,
            ),
            'CreatePerson': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePerson,
                    request_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonIdResponse.SerializeToString,
            ),
            'UpdatePerson': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePerson,
                    request_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.UpdatePersonRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_people__service__pb2.Empty.SerializeToString,
            ),
            'DeletePerson': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePerson,
                    request_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonIdRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_people__service__pb2.Empty.SerializeToString,
            ),
            'SearchPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchPerson,
                    request_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.SearchRequest.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_people__service__pb2.PersonResponse.SerializeToString,
            ),
            'CountPersons': grpc.unary_unary_rpc_method_handler(
                    servicer.CountPersons,
                    request_deserializer=src_dot_main_dot_proto_dot_people__service__pb2.Empty.FromString,
                    response_serializer=src_dot_main_dot_proto_dot_people__service__pb2.CountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'person.PeopleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PeopleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListPersons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/person.PeopleService/ListPersons',
            src_dot_main_dot_proto_dot_people__service__pb2.Empty.SerializeToString,
            src_dot_main_dot_proto_dot_people__service__pb2.PersonList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/person.PeopleService/GetPerson',
            src_dot_main_dot_proto_dot_people__service__pb2.PersonIdRequest.SerializeToString,
            src_dot_main_dot_proto_dot_people__service__pb2.PersonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/person.PeopleService/CreatePerson',
            src_dot_main_dot_proto_dot_people__service__pb2.PersonRequest.SerializeToString,
            src_dot_main_dot_proto_dot_people__service__pb2.PersonIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/person.PeopleService/UpdatePerson',
            src_dot_main_dot_proto_dot_people__service__pb2.UpdatePersonRequest.SerializeToString,
            src_dot_main_dot_proto_dot_people__service__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/person.PeopleService/DeletePerson',
            src_dot_main_dot_proto_dot_people__service__pb2.PersonIdRequest.SerializeToString,
            src_dot_main_dot_proto_dot_people__service__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/person.PeopleService/SearchPerson',
            src_dot_main_dot_proto_dot_people__service__pb2.SearchRequest.SerializeToString,
            src_dot_main_dot_proto_dot_people__service__pb2.PersonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CountPersons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/person.PeopleService/CountPersons',
            src_dot_main_dot_proto_dot_people__service__pb2.Empty.SerializeToString,
            src_dot_main_dot_proto_dot_people__service__pb2.CountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
